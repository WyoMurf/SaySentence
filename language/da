;; NOTES
;; The say.conf version, and the code in say.c don't match quite...
;; the num_full_da routine doesn't go above 999 million.
;; there is no agreement as to billions vs milliards.
;; The enum routine in say.conf only covers a small range of numbers, whereas the enum C version covers billions.
;; I made some guesses, and left other issues alone.


[number]

ATBEGIN,GREATER  999999999999        -                             -         RANGE_ERROR
ATBEGIN,LESS     0         digits/minus                            -          NEGATE  ;; turn the num positive and say "minus"

PATTERN  "^0[0-9]"                 -                               -          CUT(1)  ;; get rid of leading zeroes!

PATTERN,OPT "^1$",n           digits/1N
PATTERN,NOTOPT "^1$",n        digits/1
PATTERN "^[0-9]$"             digits/{num[0]}                                       - DONE
PATTERN "^1[0-9]$"            digits/{num[0:1]}                                     - DONE
PATTERN "^[2-9]0$"            digits/{num[0:1]}                                     - DONE
PATTERN "^[2-9][1-9]$"        digits/{num[1:1]}-and,digits/num[0:0]}0               - DONE
PATTERN "^100$"               digits/1N,digits/hundred                              - DONE
PATTERN "^1[0-9][0-9]$"       digits/1N,digits/hundred,<<number:{num[1]}>>          - DONE
PATTERN "^[2-9]00$"           digits/num[0:0]},digits/hundred                       - DONE
PATTERN "^[2-9][0-9][0-9]$"   digits/num[0:0]},digits/hundred,<<number:{num[1]}>>   - DONE
 
PATTERN "^1000$"                            digits/1N,digits/thousand                                   - DONE
PATTERN "^1[0-9][0-9][0-9]$"                digits/1N,digits/thousand,<<number:{num[1]}>>               - DONE
PATTERN "^10[0-9][0-9]$"                    digits/1N,digits/thousand,digits/and,<<number:{num[1]}>>     - DONE
PATTERN "^[2-9]000$"                        digits/num[0:0]},digits/thousand                            - DONE
PATTERN "^[2-9]0[0-9][0-9]$"                digits/num[0:0]},digits/thousand,digits/and,<<number:{num[1]}>>        - DONE
PATTERN "^[2-9][0-9][0-9][0-9]$"            digits/num[0:0]},digits/thousand,<<number:{num[1]}>>        - DONE
PATTERN "^[0-9][0-9]000$"                   <<number:{num[0:1]}>>,digits/thousand                       - DONE
PATTERN "^[0-9][0-9]0[0-9][0-9]$"           <<number:{num[0:1]}>>,digits/thousand,digits/and,<<number:{num[2]}>>   - DONE
PATTERN "^[0-9][0-9][0-9][0-9][0-9]$"       <<number:{num[0:1]}>>,digits/thousand,<<number:{num[2]}>>   - DONE
PATTERN "^[0-9][0-9][0-9]000$"              <<number:{num[0:2]}>>,digits/thousand                       - DONE
PATTERN "^[0-9][0-9][0-9]0[0-9][0-9]$"      <<number:{num[0:2]}>>,digits/thousand,digits/and,<<number:{num[3]}>>   - DONE
PATTERN "^[0-9][0-9][0-9][0-9][0-9][0-9]$"  <<number:{num[0:2]}>>,digits/thousand,<<number:{num[3]}>>   - DONE

PATTERN "^[0-9]000000$"                                   digits/num[0:0]},digits/million                               - DONE
PATTERN "^[0-9]0[0-9][0-9][0-9][0-9][0-9]$"               digits/num[0:0]},digits/million,digits/and,<<number:{num[1]}>>           - DONE
PATTERN "^[0-9]000[0-9][0-9][0-9]$"                       digits/num[0:0]},digits/million,digits/and,<<number:{num[1]}>>           - DONE
PATTERN "^[0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"           digits/num[0:0]},digits/million,<<number:{num[1]}>>           - DONE
PATTERN "^[0-9][0-9]000000$"                              <<number:{num[0:1]}>>,digits/millions                         - DONE
PATTERN "^[0-9][0-9]000[0-9][0-9][0-9]$"                  <<number:{num[0:1]}>>,digits/millions,digits/and,<<number:{num[2]}>>     - DONE
PATTERN "^[0-9][0-9]0[0-9][0-9][0-9][0-9][0-9]$"          <<number:{num[0:1]}>>,digits/millions,digits/and,<<number:{num[2]}>>     - DONE
PATTERN "^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"      <<number:{num[0:1]}>>,digits/millions,<<number:{num[2]}>>     - DONE
PATTERN "^[0-9][0-9][0-9]000000$"                         <<number:{num[0:2]}>>,digits/millions                         - DONE
PATTERN "^[0-9][0-9][0-9]000[0-9][0-9][0-9]$"             <<number:{num[0:2]}>>,digits/millions,digits/and,<<number:{num[3]}>>     - DONE
PATTERN "^[0-9][0-9][0-9]0[0-9][0-9][0-9][0-9][0-9]$"     <<number:{num[0:2]}>>,digits/millions,digits/and,<<number:{num[3]}>>     - DONE
PATTERN "^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$" <<number:{num[0:2]}>>,digits/millions,<<number:{num[3]}>>     - DONE

PATTERN "^1000000000$"                                                     digits/1N,digits/milliard                      - DONE
PATTERN,OPT "^1000000000$",f                                               digits/1N,digits/milliardF                     - DONE
PATTERN "^1[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"                 digits/1F,digits/milliard                      - DONE
PATTERN "^[2-9]000000000$"                                                 <<number:{num[0:0]}>>,digits/billion                      - DONE
PATTERN "^[2-9]000000[0-9][0-9][0-9]$"                                     <<number:{num[0:0]}>>,digits/billion,digits/and,<<number:{num[1]}>>  - DONE
PATTERN "^[2-9]000[0-9][0-9][0-9][0-9][0-9][0-9]$"                         <<number:{num[0:0]}>>,digits/billion,digits/and,<<number:{num[1]}>>  - DONE
PATTERN "^[2-9]0[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"                 <<number:{num[0:0]}>>,digits/billion,digits/and,<<number:{num[1]}>>  - DONE
PATTERN "^[1-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"             <<number:{num[0:0]}>>,digits/billion,<<number:{num[1]}>>  - DONE
PATTERN "^[1-9][0-9]000000000$"                                            <<number:{num[0:1]}>>,digits/billion                      - DONE
PATTERN "^[1-9][0-9]000000[0-9][0-9][0-9]$"                                <<number:{num[0:1]}>>,digits/billion,digits/and,<<number:{num[2]}>>  - DONE
PATTERN "^[1-9][0-9]000[0-9][0-9][0-9][0-9][0-9][0-9]$"                    <<number:{num[0:1]}>>,digits/billion,digits/and,<<number:{num[2]}>>  - DONE
PATTERN "^[1-9][0-9]0[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"            <<number:{num[0:1]}>>,digits/billion,digits/and,<<number:{num[2]}>>  - DONE
PATTERN "^[1-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"        <<number:{num[0:1]}>>,digits/billion,<<number:{num[2]}>>  - DONE
PATTERN "^[1-9][0-9][0-9]000000000$"                                       <<number:{num[0:2]}>>,digits/billion                      - DONE
PATTERN "^[1-9][0-9][0-9]000000[0-9][0-9][0-9]$"                           <<number:{num[0:2]}>>,digits/billion,digits/and,<<number:{num[3]}>>  - DONE
PATTERN "^[1-9][0-9][0-9]000[0-9][0-9][0-9][0-9][0-9][0-9]$"               <<number:{num[0:2]}>>,digits/billion,digits/and,<<number:{num[3]}>>  - DONE
PATTERN "^[1-9][0-9][0-9]0[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"       <<number:{num[0:2]}>>,digits/billion,digits/and,<<number:{num[3]}>>  - DONE
PATTERN "^[1-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"   <<number:{num[0:2]}>>,digits/billion,<<number:{num[3]}>>  - DONE


[date_time]
ANYDATE  -  <<date_format_A:{timeval}>>,<<date_format_d:{timeval}>>,<<date_format_B:{timeval}>>,<<date_format_Y:{timeval}>>,digits/at,<<date_format_k:{timeval}>>,<<date_format_M:{timeval}>> - DONE

[date]
ANYDATE  -  <<date_format_A:{timeval}>>,<<date_format_d:{timeval}>>,<<date_format_B:{timeval}>>,<<date_format_Y:{timeval}>>  - DONE 

[time]
ANYDATE -  <<date_format_H:{timeval}>>,<<date_format_M:{timeval}>> -  DONE


[enumeration]
ATBEGIN,LESS     0                 digits/minus      - NEGATE  ;; turn the num positive and say "minus"
ATBEGIN,GREATER     999999999999                 -                     - RANGE_ERROR

PATTERN  "^0[0-9]"  -                 -          CUT(1)  ;; get rid of leading zeroes!

PATTERN,OPT    "^[0-9]$",f           digits/h-{num[0]}F                                              - DONE
PATTERN,OPT    "^[0-9]$",n           digits/h-{num[0]}N                                              - DONE
PATTERN    "^[0-9]$",f           digits/h-{num[0]}F                                              - DONE
PATTERN    "^1[0-9]$"          digits/h-{num[0]}                                              - DONE
PATTERN    "^[2-9]0$"          digits/h-{num[0]}                                              - DONE
PATTERN    "^[2-9][1-9]$"      digits/{num[1]}-and,digits/h-num[0:0]}0                        - DONE
PATTERN    "^100$"             digits/1N,digits/h-hundred                                     - DONE
PATTERN    "^1[0-9][0-9]$"     digits/1N,digits/hundred,<<enumeration:{num[1]}>>              - DONE
PATTERN    "^[2-9]00$"         <<number:{num[0:0]}>>,digits/h-hundred                         - DONE
PATTERN    "^[2-9][0-9][0-9]$" <<number:{num[0:0]}>>,digits/hundred,<<enumeration:{num[1]}>>  - DONE

