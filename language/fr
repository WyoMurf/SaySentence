[number]

ATBEGIN,GREATER  999999999999        -                             -         RANGE_ERROR
ATBEGIN,LESS     0         digits/minus                            -          NEGATE  ;; turn the num positive and say "minus"

PATTERN  "^0[0-9]"                 -                               -          CUT(1)  ;; get rid of leading zeroes!

PATTERN "^[0-9]$"            digits/{num[0]}                                             - DONE
PATTERN "^1[0-9]$"           digits/{num[0]}                                             - DONE
PATTERN "^[2-9]0$"           digits/{num[0]}                                             - DONE
PATTERN "^[2-6]1$"           digits/num[0:0]}0,vm-and,digits/{num[1]}                   - DONE
PATTERN "^71$"               digits/60,vm-and,num:1{num[1]}                              - DONE
PATTERN "^7[0-9]$"           digits/60,num:1{num[1]}                                     - DONE
PATTERN "^9[0-9]$"           digits/80,num:1{num[1]}                                     - DONE
PATTERN "^[2-9][1-9]$"       digits/num[0:0]}0,<<number:{num[1]}>>                      - DONE
PATTERN "^100$"              digits/hundred                                              - DONE
PATTERN "^1[0-9][0-9]$"      digits/hundred,<<number:{num[1]}>>                          - DONE
PATTERN "^[2-9]00$"          <<number:{num[0:0]}>>,digits/hundred                       - DONE
PATTERN "^[2-9][0-9][0-9]$"  <<number:{num[0:0]}>>,digits/hundred,<<number:{num[1]}>>   - DONE
    
PATTERN "^1000$"                             digits/thousand                                             - DONE
PATTERN "^1[0-9][0-9][0-9]$"                 digits/thousand,<<number:{num[1]}>>                         - DONE
PATTERN "^[2-9]000$"                         <<number:{num[0:0]}>>,digits/thousand                      - DONE
PATTERN "^[2-9][0-9][0-9][0-9]$"             <<number:{num[0:0]}>>,digits/thousand,<<number:{num[1]}>>  - DONE
PATTERN "^[0-9][0-9]000$"                    <<number:{num[0:1]}>>,digits/thousand                      - DONE
PATTERN "^[0-9][0-9][0-9][0-9][0-9]$"        <<number:{num[0:1]}>>,digits/thousand,<<number:{num[2]}>>  - DONE
PATTERN "^[0-9][0-9][0-9]000$"               <<number:{num[0:2]}>>,digits/thousand                      - DONE
PATTERN "^[0-9][0-9][0-9][0-9][0-9][0-9]$"   <<number:{num[0:2]}>>,digits/thousand,<<number:{num[3]}>>  - DONE
    
PATTERN "^1000000$"                                          <<number:{num[0:0]}>>,digits/million                       - DONE
PATTERN "^1[0-9][0-9][0-9][0-9][0-9][0-9]$"                  <<number:{num[0:0]}>>,digits/million,<<number:{num[1]}>>   - DONE
PATTERN "^[2-9]000000$"                                      <<number:{num[0:0]}>>,digits/million                       - DONE
PATTERN "^[2-9][0-9][0-9][0-9][0-9][0-9][0-9]$"              <<number:{num[0:0]}>>,digits/million,<<number:{num[1]}>>   - DONE
PATTERN "^[0-9][0-9]000000$"                                 <<number:{num[0:1]}>>,digits/million                       - DONE
PATTERN "^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"         <<number:{num[0:1]}>>,digits/million,<<number:{num[2]}>>   - DONE
PATTERN "^[0-9][0-9][0-9]000000$"                            <<number:{num[0:2]}>>,digits/million                       - DONE
PATTERN "^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$"    <<number:{num[0:2]}>>,digits/million,<<number:{num[3]}>>   - DONE


[date_time]
ANYDATE  -  <<date_format_A:{timeval}>>,<<date_format_d:{timeval}>>,<<date_format_B:{timeval}>>,<<date_format_Y:{timeval}>>,digits/at,<<date_format_H:{timeval}>>,hours,<<date_format_M:{timeval}>>  - DONE

[date]
ANYDATE  -  <<date_format_A:{timeval}>>,<<date_format_d:{timeval}>>,<<date_format_B:{timeval}>>,<<date_format_Y:{timeval}>> - DONE


[time]
ANYDATE -  <<date_format_H:{timeval}>>,hours,<<date_format_M:{timeval}>>,perc -DONE


    
[enumeration]
ATBEGIN,LESS     0                 digits/minus      - NEGATE  ;; turn the num positive and say "minus"
ATBEGIN,GREATER     999999999999                 -                     - RANGE_ERROR

PATTERN  "^0[0-9]"  -                 -          CUT(1)  ;; get rid of leading zeroes!

